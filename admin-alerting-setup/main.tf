# -----------------------------------------------------------------------------
# AWS Provider Configuration
# -----------------------------------------------------------------------------
provider "aws" {
  region = "us-east-1" # IMPORTANT: Replace with your desired AWS region (e.g., "eu-west-1", "us-east-2")
}

# Data source to get the current AWS account ID, used for ARN construction
data "aws_caller_identity" "current" {}

# Random suffix for unique naming of resources like policies
resource "random_string" "suffix" {
  length  = 8
  special = false
  upper   = false
  numeric = true
}

# -----------------------------------------------------------------------------
# S3 Buckets for Logs and Athena Query Results
# -----------------------------------------------------------------------------

# 1. Reference Existing S3 Bucket for Raw GitHub Actions Logs
# This data source allows Terraform to reference an S3 bucket that already exists.
# We are referencing 'sumit-4254' which you stated already exists.
data "aws_s3_bucket" "existing_github_actions_logs" {
  bucket = "sumit-4254" # Reference your existing S3 bucket here
}

# 2. S3 Bucket for Athena Query Results (managed by Terraform)
# This dedicated bucket will store the output files generated by Athena queries.
# Crucial for cost management, as old results can accumulate.
resource "aws_s3_bucket" "athena_query_results" {
  bucket = "athena-query-results-4254" # This is your Athena results bucket

  tags = {
    Name        = "AthenaQueryResults"
    Environment = "Monitoring"
  }
}

# S3 Object Ownership Controls for Athena Query Results bucket
# This explicitly sets the bucket to "Bucket owner enforced" which disables ACLs.
resource "aws_s3_bucket_ownership_controls" "athena_query_results_ownership" {
  bucket = aws_s3_bucket.athena_query_results.id
  rule {
    object_ownership = "BucketOwnerEnforced"
  }
}

# S3 Lifecycle Policy for Athena Query Results
# Highly recommended to automatically delete old results to save on S3 storage costs.
resource "aws_s3_bucket_lifecycle_configuration" "athena_results_lifecycle" {
  bucket = aws_s3_bucket.athena_query_results.id

  rule {
    id     = "delete-old-athena-results"
    status = "Enabled"
    filter {} # Apply rule to all objects in the bucket

    # Most Athena results are transient; delete after a short period (e.g., 7 days)
    expiration {
      days = 7
    }
  }
}

# -----------------------------------------------------------------------------
# AWS Glue Data Catalog (Athena Table Definition)
# -----------------------------------------------------------------------------

# AWS Glue Catalog Database for Athena
# IMPORTANT: Changed name to match your working manual query
resource "aws_glue_catalog_database" "github_actions_logs_db" {
  name       = "github_actions_logs" # <--- DATABASE NAME NOW MATCHES MANUAL QUERY
  catalog_id = data.aws_caller_identity.current.account_id
}

# AWS Glue Catalog Table for Workflow Failure Logs
# This defines the schema for your raw log files in S3, allowing Athena to query them.
resource "aws_glue_catalog_table" "workflow_failure_logs_table" {
  # IMPORTANT: Changed name to match your working manual query
  name          = "workflow_failure_logs" # <--- TABLE NAME NOW MATCHES MANUAL QUERY
  database_name = aws_glue_catalog_database.github_actions_logs_db.name
  catalog_id    = data.aws_caller_identity.current.account_id

  # Storage Descriptor defines how Athena reads the data from S3
  storage_descriptor {
    location      = "s3://${data.aws_s3_bucket.existing_github_actions_logs.id}/failed-workflow-logs/" # Confirmed path

    input_format  = "org.apache.hadoop.mapred.TextInputFormat"
    output_format = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

    ser_de_info {
      name                = "LazySimpleSerDe"
      serialization_library = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
      parameters = {
        # IMPORTANT: Changed to match your working manual query's SerDe property
        "serialization.format" = "\n" # <--- THIS IS THE KEY CHANGE for text files
        # Removed "field.delim" as it's not needed for single-column text lines
      }
    }

    columns {
      name = "log_entry"
      type = "string"
    }
  }

  table_type = "EXTERNAL_TABLE" # Essential for S3-backed tables

  parameters = {
    "classification"     = "text"
    "EXTERNAL"           = "TRUE"
    # IMPORTANT: Added this TBLPROPERTY from your working manual query
    "has_encrypted_data" = "false"
  }

  # Explicit dependency to ensure the existing S3 bucket is known before Glue table creation
  depends_on = [
    data.aws_s3_bucket.existing_github_actions_logs
  ]
}

# -----------------------------------------------------------------------------
# AWS Athena Workgroup for Query Results
# -----------------------------------------------------------------------------

# This workgroup ensures all queries run within it store their results
# in the specified 'athena_query_results' S3 bucket.
resource "aws_athena_workgroup" "github_actions_workgroup" {
  name  = "github-actions-logs-workgroup"
  state = "ENABLED" # Can be ENABLED or DISABLED

  configuration {
    result_configuration {
      output_location = "s3://${aws_s3_bucket.athena_query_results.id}/" # Point to your Athena results bucket

      # Optional: Encryption settings for query results
      # encryption_configuration {
      #   encryption_option = "SSE_S3" # or "SSE_KMS", "CSE_KMS"
      # }
    }
    # Optional: Control query costs
    # enforce_workgroup_configuration     = true
    # publish_cloudwatch_metrics_enabled = true
    # bytes_scanned_cutoff_per_query      = 104857600 # 100 MB
  }

  tags = {
    Name        = "GitHubActionsAthenaWorkgroup"
    Environment = "Monitoring"
  }

  # Explicit dependency to ensure the Athena results bucket is created first
  depends_on = [
    aws_s3_bucket.athena_query_results
  ]
}

# -----------------------------------------------------------------------------
# Outputs (Optional but Recommended)
# -----------------------------------------------------------------------------
output "github_actions_logs_bucket_name" {
  description = "Name of the S3 bucket storing raw GitHub Actions logs (existing)."
  value       = data.aws_s3_bucket.existing_github_actions_logs.id
}

output "athena_query_results_bucket_name" {
  description = "Name of the S3 bucket for Athena query results."
  value       = aws_s3_bucket.athena_query_results.id
}

output "glue_database_name" {
  description = "Name of the AWS Glue Catalog Database."
  value       = aws_glue_catalog_database.github_actions_logs_db.name
}

output "glue_table_name" {
  description = "Name of the AWS Glue Catalog Table."
  value       = aws_glue_catalog_table.workflow_failure_logs_table.name
}

output "athena_workgroup_name" {
  description = "Name of the Athena Workgroup for GitHub Actions logs."
  value       = aws_athena_workgroup.github_actions_workgroup.name
}